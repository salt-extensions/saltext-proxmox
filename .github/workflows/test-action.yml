---
name: Testing

on:
  workflow_call:

jobs:

  Linux:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        include:
          - {salt-version: "3006.15", python-version: "3.9"}
          - {salt-version: "3006.15", python-version: "3.10"}
          - {salt-version: "3007.7", python-version: "3.10"}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 2  # coverage: Issue detecting commit SHA

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install "nox==$NOX_VERSION" "uv==$UV_VERSION"
        env:
          NOX_VERSION: '2025.5.1'
          UV_VERSION: '0.8.18'

      - name: Install Test Requirements
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        run: |
          nox --force-color -e tests-3 --install-only

      - name: Test
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          nox --force-color -e tests-3 -- -vv --instafail tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v10.4.0

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v10.4.0

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error

  Windows:
    runs-on: windows-2025
    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - {salt-version: "3006.15", python-version: "3.9"}
          - {salt-version: "3007.7", python-version: "3.9"}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install "nox==$env:NOX_VERSION" "uv==$env:UV_VERSION"
        env:
          NOX_VERSION: '2025.5.1'
          UV_VERSION: '0.8.18'

      - name: Install Test Requirements
        shell: bash
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          # EXTRA_REQUIREMENTS_INSTALL: Cython
        run: |
          export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
          nox --force-color -e tests-3 --install-only

      - name: Test
        shell: bash
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
          nox --force-color -e tests-3 -- -vv --instafail tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v10.4.0

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v10.4.0

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error

  macOS:
    runs-on: macos-14
    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - {salt-version: "3006.15", python-version: "3.10"}
          - {salt-version: "3007.7", python-version: "3.10"}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install "nox==$NOX_VERSION" "uv==$UV_VERSION"
        env:
          NOX_VERSION: '2025.5.1'
          UV_VERSION: '0.8.18'

      - name: Install Test Requirements
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        run: |
          nox --force-color -e tests-3 --install-only

      - name: Test
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          nox --force-color -e tests-3 -- -vv --instafail tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v10.4.0

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@af09b5e394c93991b95a5e7646aeb90c1917f78f  # v5.5.1
        with:
          files: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v10.4.0

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error
