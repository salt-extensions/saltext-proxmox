---
name: Testing

on:
  workflow_call:

jobs:

  Linux:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - {salt-version: "3006.9", python-version: "3.8"}
          - {salt-version: "3006.9", python-version: "3.9"}
          - {salt-version: "3006.9", python-version: "3.10"}
          - {salt-version: "3007.1", python-version: "3.10"}

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 2  # coverage: Issue detecting commit SHA

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: Install Test Requirements
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        run: |
          nox --force-color -e tests-3 --install-only

      - name: Test
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          nox --force-color -e tests-3 -- -vv tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v0.7.5

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v0.7.5

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error

  Windows:
    runs-on: windows-2022
    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - {salt-version: "3006.9", python-version: "3.8"}
          - {salt-version: "3007.1", python-version: "3.8"}

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download libeay32.dll
        run: |
          PY_LOC="$(which python.exe)"
          export PY_LOC
          echo "${PY_LOC}"
          PY_DIR="$(dirname "${PY_LOC}")"
          export PY_DIR
          echo "${PY_DIR}"
          curl https://repo.saltproject.io/windows/dependencies/64/libeay32.dll --output "${PY_DIR}/libeay32.dll"
          ls -l "${PY_DIR}"
        shell: bash

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: Install Test Requirements
        shell: bash
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          # EXTRA_REQUIREMENTS_INSTALL: Cython
        run: |
          export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
          nox --force-color -e tests-3 --install-only

      - name: Test
        shell: bash
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
          nox --force-color -e tests-3 -- -vv tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v0.7.5

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v0.7.5

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error

  macOS:
    runs-on: macos-14
    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - {salt-version: "3006.9", python-version: "3.9"}
          - {salt-version: "3007.1", python-version: "3.10"}

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Nox
        run: |
          python -m pip install --upgrade pip
          pip install nox

      - name: Install Test Requirements
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        run: |
          nox --force-color -e tests-3 --install-only

      - name: Test
        env:
          SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
          SKIP_REQUIREMENTS_INSTALL: true
        run: |
          nox --force-color -e tests-3 -- -vv tests/

      - name: Create CodeCov Flags
        if: always()
        id: codecov-flags
        run: |
          echo "flags=$(python -c "import sys; print('{},{},salt_{}'.format('${{ runner.os }}'.replace('-latest', ''), 'py{}{}'.format(*sys.version_info), '_'.join(str(v) for v in '${{ matrix.salt-version }}'.replace('==', '_').split('.'))))")" >> "$GITHUB_OUTPUT"

      - name: Upload Project Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-project.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},project
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-project
          use_oidc: true
          version: v0.7.5

      - name: Upload Tests Code Coverage
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673  # v4.5.0
        with:
          file: artifacts/coverage-tests.xml
          disable_search: true
          fail_ci_if_error: false
          flags: ${{ steps.codecov-flags.outputs.flags }},tests
          name: ${{ runner.os }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}-tests
          use_oidc: true
          version: v0.7.5

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: runtests-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}.log
          path: artifacts/runtests-*.log

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: exitstatus-${{ github.job }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
          path: exitstatus
          if-no-files-found: error
